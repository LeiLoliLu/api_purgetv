{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/token.service\";\nexport class AuthInterceptor {\n  constructor(tokenService) {\n    this.tokenService = tokenService;\n  }\n  intercept(req, next) {\n    const accessToken = this.tokenService.getToken();\n    req = req.clone({\n      setHeaders: {\n        Authorization: \"Bearer \" + accessToken\n      }\n    });\n    return next.handle(req);\n  }\n  static #_ = this.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.TokenService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n}","map":{"version":3,"mappings":";;AAIA,OAAM,MAAOA,eAAe;EACxBC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;EAAkB;EAClDC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAC9C,MAAMC,WAAW,GAAG,IAAI,CAACJ,YAAY,CAACK,QAAQ,EAAE;IAChDH,GAAG,GAAGA,GAAG,CAACI,KAAK,CAAC;MACZC,UAAU,EAAE;QACRC,aAAa,EAAE,SAAS,GAAGJ;;KAElC,CAAC;IACF,OAAOD,IAAI,CAACM,MAAM,CAACP,GAAG,CAAC;EAC3B;EAAC;qBAVQJ,eAAe;EAAA;EAAA;WAAfA,eAAe;IAAAY,SAAfZ,eAAe;EAAA","names":["AuthInterceptor","constructor","tokenService","intercept","req","next","accessToken","getToken","clone","setHeaders","Authorization","handle","factory"],"sourceRoot":"","sources":["C:\\Users\\Usuario\\Desktop\\changeorg\\Entrega_Angular\\frontend\\src\\app\\shared\\auth-interceptor.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpInterceptor, HttpRequest, HttpHandler } from \"@angular/common/http\";\r\nimport { TokenService } from \"../shared/token.service\";\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private tokenService: TokenService) { }\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        const accessToken = this.tokenService.getToken();\r\n        req = req.clone({\r\n            setHeaders: {\r\n                Authorization: \"Bearer \" + accessToken\r\n            }\r\n        });\r\n        return next.handle(req);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}