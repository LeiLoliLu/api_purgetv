{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PeticionService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.apiURL = \"http://127.0.0.1:8000/api\";\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  getAll() {\n    return this.httpClient.get(this.apiURL + '/peticiones/').pipe(catchError(this.errorHandler));\n  }\n  getMine() {\n    return this.httpClient.get(this.apiURL + '/mispeticiones/').pipe(catchError(this.errorHandler));\n  }\n  create(peticion) {\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'multipart/form-data');\n    headers.append('Accept', 'application/json');\n    return this.httpClient.post(this.apiURL + '/peticiones/', peticion, {\n      headers: headers\n    }).pipe(catchError(this.errorHandler));\n  }\n  find(id) {\n    return this.httpClient.get(this.apiURL + '/peticiones/' + id).pipe(catchError(this.errorHandler));\n  }\n  update(id, peticion) {\n    return this.httpClient.put(this.apiURL + '/peticiones/' + id, JSON.stringify(peticion), this.httpOptions).pipe(catchError(this.errorHandler));\n  }\n  delete(id) {\n    return this.httpClient.delete(this.apiURL + '/peticiones/' + id, this.httpOptions).pipe(catchError(this.errorHandler));\n  }\n  errorHandler(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n  firmar(id) {\n    return this.httpClient.put(this.apiURL + '/peticiones/firmar/' + id, this.httpOptions).pipe(catchError(this.errorHandler));\n  }\n  cambiarEstado(id) {\n    return this.httpClient.put(this.apiURL + '/peticiones/estado/' + id, this.httpOptions).pipe(catchError(this.errorHandler));\n  }\n  getAllCategories() {}\n  static #_ = this.ɵfac = function PeticionService_Factory(t) {\n    return new (t || PeticionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PeticionService,\n    factory: PeticionService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"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","names":["HttpHeaders","throwError","catchError","PeticionService","constructor","httpClient","headers","getAll","get","apiURL","pipe","errorHandler","getMine","create","peticion","append","post","find","id","update","put","JSON","stringify","httpOptions","delete","error","errorMessage","ErrorEvent","message","status","firmar","cambiarEstado","getAllCategories","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Usuario\\Desktop\\changeorg\\Entrega_Angular\\frontend\\src\\app\\peticion\\peticion.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n   \r\nimport {  Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n  \r\nimport { Peticion } from './peticion';\r\n   \r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PeticionService {\r\n   \r\n  private apiURL = \"http://127.0.0.1:8000/api\";\r\n   \r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n  \r\n  constructor(private httpClient: HttpClient) { }\r\n   \r\n  getAll(): Observable<Peticion[]> {\r\n    return this.httpClient.get<Peticion[]>(this.apiURL + '/peticiones/')\r\n    .pipe(\r\n      catchError(this.errorHandler)\r\n    )\r\n  }\r\n\r\n  getMine(): Observable<Peticion[]> {\r\n    return this.httpClient.get<Peticion[]>(this.apiURL + '/mispeticiones/')\r\n    .pipe(\r\n      catchError(this.errorHandler)\r\n    )\r\n  }\r\n   \r\n  create(peticion:FormData): Observable<any> {\r\n    const headers = new HttpHeaders();\r\n    headers.append('Content-Type','multipart/form-data');\r\n    headers.append('Accept','application/json');\r\n    return this.httpClient.post<any>(this.apiURL + '/peticiones/', peticion, {headers:headers})\r\n    .pipe(\r\n      catchError(this.errorHandler)\r\n    )\r\n  }  \r\n   \r\n  find(id:Number): Observable<Peticion> {\r\n    return this.httpClient.get<Peticion>(this.apiURL + '/peticiones/' + id)\r\n    .pipe(\r\n      catchError(this.errorHandler)\r\n    )\r\n  }\r\n   \r\n  update(id:Number, peticion:Peticion): Observable<Peticion> {\r\n    return this.httpClient.put<Peticion>(this.apiURL + '/peticiones/' + id, JSON.stringify(peticion), this.httpOptions)\r\n    .pipe(\r\n      catchError(this.errorHandler)\r\n    )\r\n  }\r\n   \r\n  delete(id:Number){\r\n    return this.httpClient.delete<Peticion>(this.apiURL + '/peticiones/' + id, this.httpOptions)\r\n    .pipe(\r\n      catchError(this.errorHandler)\r\n    )\r\n  }\r\n    \r\n  \r\n  errorHandler(error: { error: { message: string; }; status: any; message: any; }) {\r\n    let errorMessage = '';\r\n    if(error.error instanceof ErrorEvent) {\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    return throwError(errorMessage);\r\n }\r\n\r\n firmar(id:number):Observable<any>{\r\n  return this.httpClient.put<Peticion>(this.apiURL + '/peticiones/firmar/' + id, this.httpOptions)\r\n    .pipe(catchError(this.errorHandler))\r\n\r\n }\r\n cambiarEstado(id:number):Observable<any>{\r\n  return this.httpClient.put<Peticion>(this.apiURL + '/peticiones/estado/' + id, this.httpOptions)\r\n    .pipe(catchError(this.errorHandler))\r\n }\r\n\r\n getAllCategories(){\r\n  \r\n }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}